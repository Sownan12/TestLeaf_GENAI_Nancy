You are going to write prompt to convert selenium to playwright typescript
Instructions:

Use Playwright v1.56+ syntax and best practices for TypeScript.
Preserve all original test steps exactly—do not add, remove, or modify any logical steps from the source.
Use the same locators as defined in the Selenium Java code (e.g., if the Java code uses By.id("foo"), use '#foo' in Playwright).
Do not hardcode sleep or waitForTimeout—use Playwright’s built-in auto-waiting mechanisms (e.g., await page.locator(...).click(), await page.waitForURL(), etc.).
If a Selenium Java feature has no direct equivalent in Playwright TypeScript, insert a comment: // not implemented.
Include clear comments in the TypeScript code to explain each step, mirroring the intent of the original Java code.
The output must be valid Playwright TypeScript—not generic TypeScript or pseudocode.
Keep the timeout as 60 seconds
Make Playwright not to click cancel button in alert automatically (by default it clicks cancel button)

Context

You are an AI assistant specialized in test automation migration. 
Your task is to accurately translate legacy Selenium Java test scripts into modern, idiomatic Playwright TypeScript scripts while maintaining functional parity and leveraging Playwright’s native capabilities.

Example:

DOM:

<div data-testid="searchbox-layout-wide" class="b7ef425131 e9f1adff2b b935cde1f7 b59e36af6b"><div class="b769347817"><div class="e131f34780"><div class="a006cb595b fed761de90" data-testid="destination-container"><div class="b99b6ef58f a10a015434 d1e49ad95b ba31039024"><div class="b6f682f7ac"><div class="be34ebee1c"><div class="a7a8da5a1c b6f36b4360"><span class="fc70cba028 c2a70a5db2 bc7d708ceb" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="50px"><path d="M2.75 12h18.5c.69 0 1.25.56 1.25 1.25V18l.75-.75H.75l.75.75v-4.75c0-.69.56-1.25 1.25-1.25m0-1.5A2.75 2.75 0 0 0 0 13.25V18c0 .414.336.75.75.75h22.5A.75.75 0 0 0 24 18v-4.75a2.75 2.75 0 0 0-2.75-2.75zM0 18v3a.75.75 0 0 0 1.5 0v-3A.75.75 0 0 0 0 18m22.5 0v3a.75.75 0 0 0 1.5 0v-3a.75.75 0 0 0-1.5 0m-.75-6.75V4.5a2.25 2.25 0 0 0-2.25-2.25h-15A2.25 2.25 0 0 0 2.25 4.5v6.75a.75.75 0 0 0 1.5 0V4.5a.75.75 0 0 1 .75-.75h15a.75.75 0 0 1 .75.75v6.75a.75.75 0 0 0 1.5 0m-13.25-3h7a.25.25 0 0 1 .25.25v2.75l.75-.75h-9l.75.75V8.5a.25.25 0 0 1 .25-.25m0-1.5A1.75 1.75 0 0 0 6.75 8.5v2.75c0 .414.336.75.75.75h9a.75.75 0 0 0 .75-.75V8.5a1.75 1.75 0 0 0-1.75-1.75z"></path></svg></span></div><input name="ss" class="b915b8dc0b" placeholder="Where are you going?" data-destination="1" autocomplete="off" aria-autocomplete="list" aria-controls="autocomplete-results" aria-haspopup="listbox" aria-label="Where are you going?" aria-expanded="false" role="combobox" id=":rh:" value=""><div class="dc22f7995a ffcf7fff3d"></div></div></div></div><div class="ada790228e"></div></div></div></div><div class="b769347817"><div class="ed9f289288"><button data-testid="searchbox-dates-container" type="button" class="de576f5064 dc15842869 e84058595b f1f96fdf10 d10abb4e59"><span class="be2db1c937 bcb41e7c40"><span class="fc70cba028 e1f1de0f5d c2a70a5db2 bc7d708ceb" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="50px"><path d="M22.5 13.5v8.25a.75.75 0 0 1-.75.75H2.25a.75.75 0 0 1-.75-.75V5.25a.75.75 0 0 1 .75-.75h19.5a.75.75 0 0 1 .75.75zm1.5 0V5.25A2.25 2.25 0 0 0 21.75 3H2.25A2.25 2.25 0 0 0 0 5.25v16.5A2.25 2.25 0 0 0 2.25 24h19.5A2.25 2.25 0 0 0 24 21.75zm-23.25-3h22.5a.75.75 0 0 0 0-1.5H.75a.75.75 0 0 0 0 1.5M7.5 6V.75a.75.75 0 0 0-1.5 0V6a.75.75 0 0 0 1.5 0M18 6V.75a.75.75 0 0 0-1.5 0V6A.75.75 0 0 0 18 6M5.095 14.03a.75.75 0 1 0 1.06-1.06.75.75 0 0 0-1.06 1.06m.53-1.28a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25.75.75 0 0 0 0 1.5.375.375 0 1 1 0-.75.375.375 0 0 1 0 .75.75.75 0 0 0 0-1.5m-.53 6.53a.75.75 0 1 0 1.06-1.06.75.75 0 0 0-1.06 1.06m.53-1.28a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25.75.75 0 0 0 0 1.5.375.375 0 1 1 0-.75.375.375 0 0 1 0 .75.75.75 0 0 0 0-1.5m5.845-3.97a.75.75 0 1 0 1.06-1.06.75.75 0 0 0-1.06 1.06m.53-1.28A1.125 1.125 0 1 0 12 15a1.125 1.125 0 0 0 0-2.25.75.75 0 0 0 0 1.5.375.375 0 1 1 0-.75.375.375 0 0 1 0 .75.75.75 0 0 0 0-1.5m-.53 6.53a.75.75 0 1 0 1.06-1.06.75.75 0 0 0-1.06 1.06M12 18a1.125 1.125 0 1 0 0 2.25A1.125 1.125 0 0 0 12 18a.75.75 0 0 0 0 1.5.375.375 0 1 1 0-.75.375.375 0 0 1 0 .75.75.75 0 0 0 0-1.5m5.845-3.97a.75.75 0 1 0 1.06-1.06.75.75 0 0 0-1.06 1.06m.53-1.28a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25.75.75 0 0 0 0 1.5.375.375 0 1 1 0-.75.375.375 0 0 1 0 .75.75.75 0 0 0 0-1.5m-.53 6.53a.75.75 0 1 0 1.06-1.06.75.75 0 0 0-1.06 1.06m.53-1.28a1.125 1.125 0 1 0 0 2.25 1.125 1.125 0 0 0 0-2.25.75.75 0 0 0 0 1.5.375.375 0 1 1 0-.75.375.375 0 0 1 0 .75.75.75 0 0 0 0-1.5"></path></svg></span><span data-testid="date-display-field-start">Check-in date</span><span class="eca9157be5"> — </span><span data-testid="date-display-field-end">Check-out date</span></span></button></div></div><div class="b769347817"><div class="ab2c86b370" tabindex="-1"><button data-testid="occupancy-config" aria-controls=":ri:" aria-expanded="false" aria-label="Number of travellers and rooms. Currently selected: 2 adults · 0 children · 1 room" type="button" class="de576f5064 dc15842869 e84058595b b3d1de1c28"><span class="be2db1c937 bcb41e7c40"><span data-testid="occupancy-config-icon" class="fc70cba028 d62168fff1 c2a70a5db2 bc7d708ceb" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="50px"><path d="M16.5 6a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0M18 6A6 6 0 1 0 6 6a6 6 0 0 0 12 0M3 23.25a9 9 0 1 1 18 0 .75.75 0 0 0 1.5 0c0-5.799-4.701-10.5-10.5-10.5S1.5 17.451 1.5 23.25a.75.75 0 0 0 1.5 0"></path></svg></span>2 adults · 0 children · 1 room</span><span data-testid="searchbox-form-button-icon" class="fc70cba028 ac148ea56b eff0666279 ca6ff50764" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="50px"><path d="M19.268 8.913a.9.9 0 0 1-.266.642l-6.057 6.057A1.3 1.3 0 0 1 12 16c-.35.008-.69-.123-.945-.364L4.998 9.58a.91.91 0 0 1 0-1.284.897.897 0 0 1 1.284 0L12 13.99l5.718-5.718a.897.897 0 0 1 1.284 0 .88.88 0 0 1 .266.642"></path></svg></span></button></div></div><div class="b769347817 a7e79c28d6"><button type="submit" class="de576f5064 b46cd7aad7 ced67027e5 dda427e6b5 e4f9ca4b0c ca8e0b9533 cfd71fb584 a9d40b8d51"><span class="ca2ca5203b">Search</span></button></div></div>


Selenium code:


package Week2HWgetseleniumJavaCode;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.time.Duration;

public class OnlineShoppingTest {
    WebDriver driver;
    WebDriverWait wait;
    
    @BeforeMethod
    public void setUp() {
        try {
            System.setProperty("webdriver.chrome.driver", "chromedriver");
            driver = new ChromeDriver();
            wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            driver.manage().window().maximize();
            driver.get("https://www.amazon.com");
        } catch (Exception e) {
            System.out.println("Browser setup failed: " + e.getMessage());
        }
    }
    
    // Test Case: Verify Today's Deals Navigation
    // Scenario: User should be able to navigate to Today's Deals page from main navigation
    @Test
    public void testTodaysDealsNavigation() {
        try {
            WebElement todaysDealsLink = wait.until(ExpectedConditions.elementToBeClickable(
                By.xpath("//a[contains(text(), \"Today's Deals\")]")));
            todaysDealsLink.click();
            
            wait.until(ExpectedConditions.titleContains("Today's Deals"));
            
        } catch (Exception e) {
            System.out.println("Test execution failed: " + e.getMessage());
        }
    }
    
    @AfterMethod
    public void tearDown() {
        try {
            if (driver != null) {
                driver.quit();
            }
        } catch (Exception e) {
            System.out.println("Browser cleanup failed: " + e.getMessage());
        }
    }
}


Persona:
 - Act as a senior test automation developer and expert in writing playwrite typescript code

Output:
 - Include the comments section, scripter name as :Chandra, date:todays date, also include the key logic or scenario details
- Follow the code standard as per the tech stack given



Output:

// Scripter: Chandra
// Date: 2023-10-04
// Scenario: User should be able to navigate to Today's Deals page from main navigation.
// Test Case: Verify Today's Deals Navigation

import { test, expect } from '@playwright/test';

test.describe('Online Shopping Test', () => {

    // Set up function to run before each test
    test.beforeEach(async ({ page }) => {
        try {
            await page.goto('https://www.amazon.com'); // Navigate to Amazon website
            await page.setViewportSize({ width: 1280, height: 720 }); // Maximize window size
        } catch (error) {
            console.error('Browser setup failed:', error);
        }
    });

    // Test Case: Verify Today's Deals Navigation
    test('testTodaysDealsNavigation', async ({ page }) => {
        try {
            // Wait for Today's Deals link to be clickable and then click it
            const todaysDealsLink = page.locator("//a[contains(text(), \"Today's Deals\")]");
            await expect(todaysDealsLink).toBeVisible({ timeout: 60000 }); // Ensure the link is visible
            await todaysDealsLink.click(); // Click on the Today's Deals link

            // Wait for the page title to contain "Today's Deals"
            await expect(page).toHaveTitle(/Today's Deals/, { timeout: 60000 });

        } catch (error) {
            console.error('Test execution failed:', error);
        }
    });

    // Tear down function to run after each test
    test.afterEach(async ({ page }) => {
        try {
            await page.close(); // Close the page after the test finishes
        } catch (error) {
            console.error('Browser cleanup failed:', error);
        }
    });
});